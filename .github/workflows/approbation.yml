name: Check Approbation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-approbation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Checkout specs repository
        uses: actions/checkout@v2
        with:
          repository: vegaprotocol/specs
          ref: master
          path: specs

      - name: Run Approbation
        id: approbation
        run: |
          npm install -g github:vegaprotocol/approbation
          echo "Starting Approbation"
          npx github:vegaprotocol/approbation check-references \
            --specs="specs/user-interface/1101-BWAL-browser_wallet.md" \
            --tests="{src,test}/**/*.{spec,test}.{ts,js,tsx,jsx}" \
            --categories="specs/user-interface/categories.json" \
            --show-branches --show-mystery > output.txt
          echo "Approbation completed"
          output=$(cat output.txt)
          echo "$output"
          total_criteria=$(echo "$output" | awk 'NR==1{print $3}')
          with_references=$(echo "$output" | awk 'NR==2{print $3}')
          without_references=$(echo "$output" | awk 'NR==3{print $3}')
          mystery_criteria=$(echo "$output" | awk 'NR==4{print $3}')
          echo "::set-output name=total_criteria::$total_criteria"
          echo "::set-output name=with_references::$with_references"
          echo "::set-output name=without_references::$without_references"
          echo "::set-output name=mystery_criteria::$mystery_criteria"

      - name: Read output file
        id: read_output
        run: |
          output=$(cat output.txt)
          echo "::set-output name=output::$output"

      - name: Comment on pull request
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ```
            echo -e "$(fold -w 80 output.txt)"

            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
