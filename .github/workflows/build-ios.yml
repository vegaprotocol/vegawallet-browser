name: Build iOS ipa

on:
  pull_request:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js Latest
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn install
      - name: Build app
        run: yarn run build:beta

      - run: fastlane release
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          IOS_APP_STORE_CONNECT_API_KEY: ${{ secrets.IOS_APP_STORE_CONNECT_API_KEY }}
          CI_BOT_GITHUB_TOKEN: ${{ secrets.CI_BOT_GITHUB_TOKEN }}

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: app.ipa
          path: './app.ipa'

  # unzip-artifact:
  #   needs: build-ios
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: app.ipa
  #         path: .

  # - name: Unzip artifact
  #   run: unzip app.ipa.zip -d extracted_ipa

  upload-ios-app:
    needs: build-ios
    runs-on: ubuntu-latest
    steps:
      - name: Upload iOS App
        id: ios_app_upload
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api-cloud.browserstack.com/app-automate/upload
          method: POST
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          password: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          data: '{ "custom_id": "test" }'
          file: '{ "file": "${{ github.workspace }}/app.ipa" }'
          maskResponse: false
      - name: Show Response
        run: |
          echo ${{ steps.myRequest.outputs.response }}
          echo ${{ steps.myRequest.outputs.headers }}
          echo ${{ fromJson(steps.myRequest.outputs.response).field_you_want_to_access }}
