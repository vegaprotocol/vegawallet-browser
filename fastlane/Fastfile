TEMP_KEYCHAIN_USER = 'local_keychain'
TEMP_KEYCHAIN_PASSWORD = ENV['MATCH_PASSWORD']

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

lane :release do
  keychain_name = TEMP_KEYCHAIN_USER
  keychain_password = TEMP_KEYCHAIN_PASSWORD
  ensure_temp_keychain(keychain_name, keychain_password)
  api_key = app_store_connect_api_key(
    key_id: "YBANA83587",
    issuer_id: "8aa69e69-be1e-462d-b131-1f701b1c1d6b",
    key_content: ENV['IOS_APP_STORE_CONNECT_API_KEY'],
    key_filepath: './fastlane/key.p8',
    duration: 1200,
    in_house: false
  )
  match(
    git_basic_authorization: Base64.strict_encode64(ENV['CI_BOT_GITHUB_TOKEN']),
    type: 'appstore',
    app_identifier: 'xyz.vega.betawallet,xyz.vega.betawallet.iosextension',
    keychain_name: keychain_name,
    keychain_password: keychain_password,
  )
  build_app(
    project: "./ios-app/Vega Wallet/Vega Wallet.xcodeproj",
    configuration: "Release",
    scheme: "Vega Wallet",
    export_method: "app-store",
    export_options: {
      provisioningProfiles: {
        "xyz.vega.betawallet.iosextension" => "match AppStore xyz.vega.betawallet.iosextension",
        "xyz.vega.betawallet" => "match AppStore xyz.vega.betawallet"
      }
    },
    clean: true,
    output_directory: ".", # Destination directory. Defaults to current directory.
    output_name: "app.ipa",  
  )
end
  