const path = require('node:path')
const Ajv = require('ajv')
const ajvErrors = require('ajv-errors')
const standaloneCode = require('ajv/dist/standalone/index.js')
const fs = require('node:fs/promises')

const compileFile = async (sourcePath, destinationPath) => {
  const ajv = new Ajv({
    // Output all errors at once when validating at runtime
    allErrors: true,

    code: {
      source: true,

      // Generate ESM code like the rest of the project.
      // This can be transpiled to CJS later
      esm: true,
    },
  })
  // Decorate with ajv-errors to generate human readable errors from
  // the custom `errorMessage` properties on the schema
  ajvErrors(ajv)

  const { default: schema } = await import(path.resolve(sourcePath))

  const compiledValidator = ajv.compile(schema)
  const moduleCode = standaloneCode(ajv, compiledValidator)
  await fs.mkdir(path.dirname(destinationPath), { recursive: true })
  await fs.writeFile(
    destinationPath,
    `/* eslint-disable */
/// Autogenerated by 'scripts/compile-ajv-schema.js' target 'schemas'
${moduleCode}
`
  )
}
module.exports = { compileFile }
